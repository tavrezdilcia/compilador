/* Generated By:JavaCC: Do not edit this line. Parser.java */
package com.utesa.compilador.mycode.syntax;

import java.util.List;
import java.util.ArrayList;
import java.io.Reader;
import com.utesa.compilador.util.Log;
import com.utesa.compilador.entities.*;

public class Parser implements ParserConstants {
    public Program parse(Reader reader, Log log) {
        try {
            return parseProgram();
        } catch (TokenMgrError e) {
            log.exception(e);
            return null;
        } catch (ParseException e) {
            log.exception(e);
            return null;
        }
    }

// ---------------------------------------------------------------------------
// SYNTAX ANALYZER
// ---------------------------------------------------------------------------
  final public Program parseProgram() throws ParseException {
    List<Statement> statements = new ArrayList<Statement>();
    Statement s;
    label_1:
    while (true) {
      s = parseStmt();
                       statements.add(s);
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 6:
      case 7:
      case 8:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 16:
      case 17:
      case 19:
      case 20:
      case 24:
      case 55:
      case 56:
      case ID:
        ;
        break;
      default:
        jj_la1[0] = jj_gen;
        break label_1;
      }
    }
    jj_consume_token(0);
     {if (true) return new Program(statements);}
    throw new Error("Missing return statement in function");
  }

  final public Declarable parseDec() throws ParseException {
    Declarable d;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 14:
      d = parseTypeDec();
      break;
    default:
      jj_la1[1] = jj_gen;
      if (jj_2_1(2147483647)) {
        d = parseFunDec();
      } else {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 6:
        case 10:
        case 13:
        case 17:
        case 19:
        case ID:
          d = parseVarDec();
          break;
        default:
          jj_la1[2] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    }
     {if (true) return d;}
    throw new Error("Missing return statement in function");
  }

  final public Type parseTypeDec() throws ParseException {
    Token s;
    String t;
    Token f;
    List<StructField> fields = new ArrayList<StructField>();
    jj_consume_token(14);
    s = jj_consume_token(ID);
    jj_consume_token(32);
    label_2:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 6:
      case 10:
      case 13:
      case 17:
      case 19:
      case ID:
        ;
        break;
      default:
        jj_la1[3] = jj_gen;
        break label_2;
      }
      t = parseType();
      f = jj_consume_token(ID);
      jj_consume_token(27);
         fields.add(new StructField(f.image, t));
    }
    jj_consume_token(33);
     {if (true) return new StructType(s.image, fields);}
    throw new Error("Missing return statement in function");
  }

  final public String parseType() throws ParseException {
    Token i;
    StringBuilder builder = new StringBuilder();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 6:
      i = jj_consume_token(6);
      break;
    case 13:
      i = jj_consume_token(13);
      break;
    case 10:
      i = jj_consume_token(10);
      break;
    case 17:
      i = jj_consume_token(17);
      break;
    case 19:
      i = jj_consume_token(19);
      break;
    case ID:
      i = jj_consume_token(ID);
      break;
    default:
      jj_la1[4] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     builder.append(i.image);
    label_3:
    while (true) {
      if (jj_2_2(2)) {
        ;
      } else {
        break label_3;
      }
      jj_consume_token(30);
      jj_consume_token(31);
                              builder.append("[]");
    }
     {if (true) return builder.toString();}
    throw new Error("Missing return statement in function");
  }

  final public Variable parseVarDec() throws ParseException {
    String t;
    Token v;
    Expression e = null;
    t = parseType();
    v = jj_consume_token(ID);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 34:
      jj_consume_token(34);
      e = parseExp();
      break;
    default:
      jj_la1[5] = jj_gen;
      ;
    }
    jj_consume_token(27);
     {if (true) return new Variable(v.image, t, e);}
    throw new Error("Missing return statement in function");
  }

  final public Function parseFunDec() throws ParseException {
    String r;
    Token n;
    String t;
    Token p;
    List<Variable> params = new ArrayList<Variable>();
    Block body;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 6:
    case 10:
    case 13:
    case 17:
    case 19:
    case ID:
      r = parseType();
      break;
    case 20:
      jj_consume_token(20);
                               r = "void";
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    n = jj_consume_token(ID);
    jj_consume_token(28);
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 6:
    case 10:
    case 13:
    case 17:
    case 19:
    case ID:
      t = parseType();
      p = jj_consume_token(ID);
         params.add(new Variable(p.image, t, null));
      label_4:
      while (true) {
        if (jj_2_3(2)) {
          ;
        } else {
          break label_4;
        }
        jj_consume_token(26);
        t = parseType();
        p = jj_consume_token(ID);
             params.add(new Variable(p.image, t, null));
      }
      break;
    default:
      jj_la1[7] = jj_gen;
      ;
    }
    jj_consume_token(29);
    body = parseBlock();
     {if (true) return new Function(r, n.image, params, body);}
    throw new Error("Missing return statement in function");
  }

  final public Block parseBlock() throws ParseException {
    List<Statement> statements = new ArrayList<Statement>();
    Statement s;
    jj_consume_token(32);
    label_5:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 6:
      case 7:
      case 8:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 16:
      case 17:
      case 19:
      case 20:
      case 24:
      case 55:
      case 56:
      case ID:
        ;
        break;
      default:
        jj_la1[8] = jj_gen;
        break label_5;
      }
      s = parseStmt();
                       statements.add(s);
    }
    jj_consume_token(33);
     {if (true) return new Block(statements);}
    throw new Error("Missing return statement in function");
  }

  final public Statement parseStmt() throws ParseException {
    Declarable d;
    Expression e = null, e1 = null, e2 = null;
    Statement s = null;
    Block b = null;
    Block elseBlock = null;
    Token i = null;
    String t = null;
    List<Expression> args = new ArrayList<Expression>();
    List<Case> cases = new ArrayList<Case>();
    if (jj_2_5(2147483647)) {
      d = parseDec();
     {if (true) return new Declaration(d);}
    } else if (jj_2_6(2147483647)) {
      s = parseAssignment();
      jj_consume_token(27);
     {if (true) return s;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case ID:
        s = parseCallStatement();
        jj_consume_token(27);
     {if (true) return s;}
        break;
      case 8:
        jj_consume_token(8);
        jj_consume_token(27);
     {if (true) return new BreakStatement();}
        break;
      case 12:
        jj_consume_token(12);
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 10:
        case 13:
        case 15:
        case 18:
        case 19:
        case 21:
        case 22:
        case 23:
        case 28:
        case 43:
        case 45:
        case 52:
        case 55:
        case 56:
        case INTLIT:
        case FLOATLIT:
        case CHARLIT:
        case STRINGLIT:
        case ID:
          e = parseExp();
          break;
        default:
          jj_la1[9] = jj_gen;
          ;
        }
        jj_consume_token(27);
     {if (true) return new ReturnStatement(e);}
        break;
      case 24:
        jj_consume_token(24);
        args = parseArgs();
        jj_consume_token(27);
     {if (true) return new PrintStatement(args);}
        break;
      case 7:
        jj_consume_token(7);
        e = parseExp();
        b = parseBlock();
     cases.add(new Case(e, b));
        label_6:
        while (true) {
          if (jj_2_4(2)) {
            ;
          } else {
            break label_6;
          }
          jj_consume_token(9);
          jj_consume_token(7);
          e = parseExp();
          b = parseBlock();
         cases.add(new Case(e, b));
        }
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 9:
          jj_consume_token(9);
          elseBlock = parseBlock();
          break;
        default:
          jj_la1[10] = jj_gen;
          ;
        }
     {if (true) return new IfStatement(cases, elseBlock);}
        break;
      case 16:
        jj_consume_token(16);
        e = parseExp();
        b = parseBlock();
     {if (true) return new WhileStatement(e, b);}
        break;
      default:
        jj_la1[14] = jj_gen;
        if (jj_2_7(2)) {
          jj_consume_token(11);
          jj_consume_token(28);
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case 6:
          case 10:
          case 13:
          case 17:
          case 19:
          case ID:
            t = parseType();
            i = jj_consume_token(ID);
            jj_consume_token(34);
            e1 = parseExp();
            break;
          default:
            jj_la1[11] = jj_gen;
            ;
          }
          jj_consume_token(27);
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case 10:
          case 13:
          case 15:
          case 18:
          case 19:
          case 21:
          case 22:
          case 23:
          case 28:
          case 43:
          case 45:
          case 52:
          case 55:
          case 56:
          case INTLIT:
          case FLOATLIT:
          case CHARLIT:
          case STRINGLIT:
          case ID:
            e2 = parseExp();
            break;
          default:
            jj_la1[12] = jj_gen;
            ;
          }
          jj_consume_token(27);
          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
          case 55:
          case 56:
          case ID:
            s = parseAssignment();
            break;
          default:
            jj_la1[13] = jj_gen;
            ;
          }
          jj_consume_token(29);
          b = parseBlock();
     {if (true) return new ClassicForStatement(t, i==null?null:i.image, e1, e2, s, b);}
        } else {
          jj_consume_token(-1);
          throw new ParseException();
        }
      }
    }
    throw new Error("Missing return statement in function");
  }

  final public Statement parseAssignment() throws ParseException {
    VariableExpression v;
    Expression e = null;
    Statement s;
    if (jj_2_8(2147483647)) {
      s = parseIncrementStatement();
     {if (true) return s;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case ID:
        v = parseVar();
        jj_consume_token(34);
        e = parseExp();
     {if (true) return new AssignmentStatement(v, e);}
        break;
      default:
        jj_la1[15] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
  }

  final public Statement parseIncrementStatement() throws ParseException {
    String op;
    VariableExpression v;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
    case 56:
      op = parseIncop();
      v = parseVar();
      break;
    case ID:
      v = parseVar();
      op = parseIncop();
      break;
    default:
      jj_la1[16] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return new IncrementStatement(v, op);}
    throw new Error("Missing return statement in function");
  }

  final public Statement parseCallStatement() throws ParseException {
    Token i;
    List<Expression> args;
    i = jj_consume_token(ID);
    jj_consume_token(28);
    args = parseArgs();
    jj_consume_token(29);
     {if (true) return new CallStatement(i.image, args);}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp() throws ParseException {
    Expression e1;
    Expression e2;
    e1 = parseExp1();
    label_7:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 41:
        ;
        break;
      default:
        jj_la1[17] = jj_gen;
        break label_7;
      }
      jj_consume_token(41);
      e2 = parseExp1();
                            e1 = new InfixExpression(e1, "||", e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp1() throws ParseException {
    Expression e1;
    Expression e2;
    e1 = parseExp2();
    label_8:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 42:
        ;
        break;
      default:
        jj_la1[18] = jj_gen;
        break label_8;
      }
      jj_consume_token(42);
      e2 = parseExp2();
                            e1 = new InfixExpression(e1, "&&", e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp2() throws ParseException {
    Expression e1;
    Expression e2;
    e1 = parseExp3();
    label_9:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 49:
        ;
        break;
      default:
        jj_la1[19] = jj_gen;
        break label_9;
      }
      jj_consume_token(49);
      e2 = parseExp3();
                           e1 = new InfixExpression(e1, "|", e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp3() throws ParseException {
    Expression e1;
    Expression e2;
    e1 = parseExp4();
    label_10:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 50:
        ;
        break;
      default:
        jj_la1[20] = jj_gen;
        break label_10;
      }
      jj_consume_token(50);
      e2 = parseExp4();
                           e1 = new InfixExpression(e1, "^", e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp4() throws ParseException {
    Expression e1;
    Expression e2;
    e1 = parseExp5();
    label_11:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 51:
        ;
        break;
      default:
        jj_la1[21] = jj_gen;
        break label_11;
      }
      jj_consume_token(51);
      e2 = parseExp5();
                           e1 = new InfixExpression(e1, "&", e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp5() throws ParseException {
    String op;
    Expression e1;
    Expression e2;
    e1 = parseExp6();
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      op = parseRelop();
      e2 = parseExp6();
                                         e1 = new InfixExpression(e1, op, e2);
      break;
    default:
      jj_la1[22] = jj_gen;
      ;
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp6() throws ParseException {
    String op;
    Expression e1;
    Expression e2;
    e1 = parseExp7();
    label_12:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 53:
      case 54:
        ;
        break;
      default:
        jj_la1[23] = jj_gen;
        break label_12;
      }
      op = parseShiftop();
      e2 = parseExp7();
                                           e1 = new InfixExpression(e1, op, e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp7() throws ParseException {
    String op;
    Expression e1;
    Expression e2;
    e1 = parseExp8();
    label_13:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 44:
      case 45:
        ;
        break;
      default:
        jj_la1[24] = jj_gen;
        break label_13;
      }
      op = parseAddop();
      e2 = parseExp8();
                                         e1 = new InfixExpression(e1, op, e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp8() throws ParseException {
    String op;
    Expression e1;
    Expression e2;
    e1 = parseExp9();
    label_14:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 46:
      case 47:
      case 48:
        ;
        break;
      default:
        jj_la1[25] = jj_gen;
        break label_14;
      }
      op = parseMulop();
      e2 = parseExp9();
                                         e1 = new InfixExpression(e1, op, e2);
    }
     {if (true) return e1;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp9() throws ParseException {
    String op = null;
    Expression e;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 10:
    case 13:
    case 19:
    case 23:
    case 43:
    case 45:
    case 52:
      op = parsePrefixop();
      break;
    default:
      jj_la1[26] = jj_gen;
      ;
    }
    e = parseExp10();
     {if (true) return op == null ? e : new PrefixExpression(op, e);}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseExp10() throws ParseException {
    Expression e;
    if (jj_2_9(2)) {
      e = parseLiteral();
     {if (true) return e;}
    } else if (jj_2_10(2147483647)) {
      e = parseIncrementExpression();
     {if (true) return e;}
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case ID:
        e = parseVar();
     {if (true) return e;}
        break;
      case 22:
        e = parseNewObject();
     {if (true) return e;}
        break;
      case 28:
        jj_consume_token(28);
        e = parseExp();
        jj_consume_token(29);
     {if (true) return e;}
        break;
      default:
        jj_la1[27] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
  }

  final public Literal parseLiteral() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 15:
      jj_consume_token(15);
            {if (true) return Literal.NULL;}
      break;
    case 18:
      jj_consume_token(18);
            {if (true) return BooleanLiteral.TRUE;}
      break;
    case 21:
      jj_consume_token(21);
             {if (true) return BooleanLiteral.FALSE;}
      break;
    case INTLIT:
      i = jj_consume_token(INTLIT);
                {if (true) return new IntegerLiteral(i.image);}
      break;
    case FLOATLIT:
      i = jj_consume_token(FLOATLIT);
                  {if (true) return new RealLiteral(i.image);}
      break;
    case CHARLIT:
      i = jj_consume_token(CHARLIT);
                 {if (true) return new CharLiteral(i.image);}
      break;
    case STRINGLIT:
      i = jj_consume_token(STRINGLIT);
                   {if (true) return new StringLiteral(i.image);}
      break;
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public VariableExpression parseVar() throws ParseException {
    VariableExpression v;
    Expression e =  null;
    Token i;
    if (jj_2_11(2)) {
      v = parseCallExpression();
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case ID:
        i = jj_consume_token(ID);
         v = new SimpleVariableReference(i.image);
        break;
      default:
        jj_la1[29] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    label_15:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 25:
      case 30:
        ;
        break;
      default:
        jj_la1[30] = jj_gen;
        break label_15;
      }
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 30:
        jj_consume_token(30);
        e = parseExp();
        jj_consume_token(31);
         v = new SubscriptedVariable(v, e);
        break;
      case 25:
        jj_consume_token(25);
        i = jj_consume_token(ID);
         v = new DottedVariable(v, i.image);
        break;
      default:
        jj_la1[31] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
     {if (true) return v;}
    throw new Error("Missing return statement in function");
  }

  final public Expression parseIncrementExpression() throws ParseException {
    String op;
    VariableExpression v;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
    case 56:
      op = parseIncop();
      v = parseVar();
     {if (true) return new PrefixExpression(op, v);}
      break;
    case ID:
      v = parseVar();
      op = parseIncop();
     {if (true) return new PostfixExpression(v, op);}
      break;
    default:
      jj_la1[32] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
  }

  final public Expression parseNewObject() throws ParseException {
    String t;
    List<Expression> args;
    Expression e;
    Token i;
    List<Expression> bounds = new ArrayList<Expression>();
    jj_consume_token(22);
    if (jj_2_12(2147483647)) {
      i = jj_consume_token(ID);
      jj_consume_token(32);
      args = parseArgs();
      jj_consume_token(33);
         {if (true) return new StructAggregate(i.image, args);}
    } else {
      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
      case 6:
      case 10:
      case 13:
      case 17:
      case 19:
      case ID:
        t = parseType();
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 32:
          jj_consume_token(32);
          args = parseArgs();
          jj_consume_token(33);
             {if (true) return new ArrayAggregate(t, args);}
          break;
        case 30:
          jj_consume_token(30);
          e = parseExp();
          jj_consume_token(31);
             {if (true) return new EmptyArray(t, e);}
          break;
        default:
          jj_la1[33] = jj_gen;
          jj_consume_token(-1);
          throw new ParseException();
        }
        break;
      default:
        jj_la1[34] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    throw new Error("Missing return statement in function");
  }

  final public VariableExpression parseCallExpression() throws ParseException {
    Token i;
    List<Expression> args;
    i = jj_consume_token(ID);
    jj_consume_token(28);
    args = parseArgs();
    jj_consume_token(29);
     {if (true) return new CallExpression(i.image, args);}
    throw new Error("Missing return statement in function");
  }

  final public List<Expression> parseArgs() throws ParseException {
    List<Expression> args = new ArrayList<Expression>();
    Expression e;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 10:
    case 13:
    case 15:
    case 18:
    case 19:
    case 21:
    case 22:
    case 23:
    case 28:
    case 43:
    case 45:
    case 52:
    case 55:
    case 56:
    case INTLIT:
    case FLOATLIT:
    case CHARLIT:
    case STRINGLIT:
    case ID:
      e = parseExp();
                        args.add(e);
      label_16:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
        case 26:
          ;
          break;
        default:
          jj_la1[35] = jj_gen;
          break label_16;
        }
        jj_consume_token(26);
        e = parseExp();
                             args.add(e);
      }
      break;
    default:
      jj_la1[36] = jj_gen;
      ;
    }
     {if (true) return args;}
    throw new Error("Missing return statement in function");
  }

  final public String parseRelop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 37:
      i = jj_consume_token(37);
      break;
    case 38:
      i = jj_consume_token(38);
      break;
    case 35:
      i = jj_consume_token(35);
      break;
    case 36:
      i = jj_consume_token(36);
      break;
    case 40:
      i = jj_consume_token(40);
      break;
    case 39:
      i = jj_consume_token(39);
      break;
    default:
      jj_la1[37] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  final public String parseShiftop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 53:
      i = jj_consume_token(53);
      break;
    case 54:
      i = jj_consume_token(54);
      break;
    default:
      jj_la1[38] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  final public String parseAddop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 44:
      i = jj_consume_token(44);
      break;
    case 45:
      i = jj_consume_token(45);
      break;
    default:
      jj_la1[39] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  final public String parseMulop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 46:
      i = jj_consume_token(46);
      break;
    case 47:
      i = jj_consume_token(47);
      break;
    case 48:
      i = jj_consume_token(48);
      break;
    default:
      jj_la1[40] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  final public String parsePrefixop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 45:
      i = jj_consume_token(45);
      break;
    case 43:
      i = jj_consume_token(43);
      break;
    case 52:
      i = jj_consume_token(52);
      break;
    case 10:
      i = jj_consume_token(10);
      break;
    case 13:
      i = jj_consume_token(13);
      break;
    case 19:
      i = jj_consume_token(19);
      break;
    case 23:
      i = jj_consume_token(23);
      break;
    default:
      jj_la1[41] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  final public String parseIncop() throws ParseException {
    Token i;
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
      i = jj_consume_token(55);
      break;
    case 56:
      i = jj_consume_token(56);
      break;
    default:
      jj_la1[42] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
     {if (true) return i.image;}
    throw new Error("Missing return statement in function");
  }

  private boolean jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private boolean jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private boolean jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private boolean jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private boolean jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private boolean jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private boolean jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private boolean jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private boolean jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private boolean jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private boolean jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private boolean jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private boolean jj_3R_92() {
    if (jj_3R_95()) return true;
    if (jj_3R_91()) return true;
    return false;
  }

  private boolean jj_3R_30() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(55)) {
    jj_scanpos = xsp;
    if (jj_scan_token(56)) return true;
    }
    return false;
  }

  private boolean jj_3R_87() {
    if (jj_3R_91()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_92()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_105() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(45)) {
    jj_scanpos = xsp;
    if (jj_scan_token(43)) {
    jj_scanpos = xsp;
    if (jj_scan_token(52)) {
    jj_scanpos = xsp;
    if (jj_scan_token(10)) {
    jj_scanpos = xsp;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_scan_token(19)) {
    jj_scanpos = xsp;
    if (jj_scan_token(23)) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_88() {
    if (jj_scan_token(51)) return true;
    if (jj_3R_87()) return true;
    return false;
  }

  private boolean jj_3R_18() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(6)) {
    jj_scanpos = xsp;
    if (jj_scan_token(13)) {
    jj_scanpos = xsp;
    if (jj_scan_token(10)) {
    jj_scanpos = xsp;
    if (jj_scan_token(17)) {
    jj_scanpos = xsp;
    if (jj_scan_token(19)) {
    jj_scanpos = xsp;
    if (jj_scan_token(64)) return true;
    }
    }
    }
    }
    }
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_2()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_84() {
    if (jj_3R_87()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_88()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_104() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(46)) {
    jj_scanpos = xsp;
    if (jj_scan_token(47)) {
    jj_scanpos = xsp;
    if (jj_scan_token(48)) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_47() {
    if (jj_3R_18()) return true;
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_85() {
    if (jj_scan_token(50)) return true;
    if (jj_3R_84()) return true;
    return false;
  }

  private boolean jj_3R_80() {
    if (jj_3R_84()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_85()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_101() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(44)) {
    jj_scanpos = xsp;
    if (jj_scan_token(45)) return true;
    }
    return false;
  }

  private boolean jj_3R_17() {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3_1() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_17()) {
    jj_scanpos = xsp;
    if (jj_scan_token(20)) return true;
    }
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(28)) return true;
    return false;
  }

  private boolean jj_3R_42() {
    if (jj_scan_token(14)) return true;
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(32)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_47()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(33)) return true;
    return false;
  }

  private boolean jj_3R_81() {
    if (jj_scan_token(49)) return true;
    if (jj_3R_80()) return true;
    return false;
  }

  private boolean jj_3R_98() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(53)) {
    jj_scanpos = xsp;
    if (jj_scan_token(54)) return true;
    }
    return false;
  }

  private boolean jj_3R_70() {
    if (jj_3R_80()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_81()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_29() {
    if (jj_3R_44()) return true;
    return false;
  }

  private boolean jj_3R_28() {
    if (jj_3R_43()) return true;
    return false;
  }

  private boolean jj_3R_95() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_scan_token(37)) {
    jj_scanpos = xsp;
    if (jj_scan_token(38)) {
    jj_scanpos = xsp;
    if (jj_scan_token(35)) {
    jj_scanpos = xsp;
    if (jj_scan_token(36)) {
    jj_scanpos = xsp;
    if (jj_scan_token(40)) {
    jj_scanpos = xsp;
    if (jj_scan_token(39)) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_27() {
    if (jj_3R_42()) return true;
    return false;
  }

  private boolean jj_3R_71() {
    if (jj_scan_token(42)) return true;
    if (jj_3R_70()) return true;
    return false;
  }

  private boolean jj_3R_72() {
    if (jj_scan_token(26)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_59() {
    if (jj_3R_70()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_71()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_19() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_27()) {
    jj_scanpos = xsp;
    if (jj_3R_28()) {
    jj_scanpos = xsp;
    if (jj_3R_29()) return true;
    }
    }
    return false;
  }

  private boolean jj_3R_61() {
    if (jj_3R_56()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_72()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_60() {
    if (jj_scan_token(41)) return true;
    if (jj_3R_59()) return true;
    return false;
  }

  private boolean jj_3R_57() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_61()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_56() {
    if (jj_3R_59()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_60()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_26() {
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(28)) return true;
    if (jj_3R_57()) return true;
    if (jj_scan_token(29)) return true;
    return false;
  }

  private boolean jj_3R_23() {
    if (jj_3R_31()) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_114() {
    if (jj_scan_token(30)) return true;
    if (jj_3R_56()) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_74() {
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(28)) return true;
    if (jj_3R_57()) return true;
    if (jj_scan_token(29)) return true;
    return false;
  }

  private boolean jj_3_12() {
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(32)) return true;
    return false;
  }

  private boolean jj_3R_113() {
    if (jj_scan_token(32)) return true;
    if (jj_3R_57()) return true;
    if (jj_scan_token(33)) return true;
    return false;
  }

  private boolean jj_3R_90() {
    if (jj_3R_31()) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_89() {
    if (jj_3R_30()) return true;
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_112() {
    if (jj_3R_18()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_113()) {
    jj_scanpos = xsp;
    if (jj_3R_114()) return true;
    }
    return false;
  }

  private boolean jj_3R_111() {
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(32)) return true;
    if (jj_3R_57()) return true;
    if (jj_scan_token(33)) return true;
    return false;
  }

  private boolean jj_3R_86() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_89()) {
    jj_scanpos = xsp;
    if (jj_3R_90()) return true;
    }
    return false;
  }

  private boolean jj_3R_22() {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3_8() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_22()) {
    jj_scanpos = xsp;
    if (jj_3R_23()) return true;
    }
    return false;
  }

  private boolean jj_3R_110() {
    if (jj_scan_token(22)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_111()) {
    jj_scanpos = xsp;
    if (jj_3R_112()) return true;
    }
    return false;
  }

  private boolean jj_3R_83() {
    if (jj_3R_31()) return true;
    if (jj_scan_token(34)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_82() {
    if (jj_3R_86()) return true;
    return false;
  }

  private boolean jj_3R_73() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_82()) {
    jj_scanpos = xsp;
    if (jj_3R_83()) return true;
    }
    return false;
  }

  private boolean jj_3R_41() {
    if (jj_3R_31()) return true;
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_32() {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_25() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_40()) {
    jj_scanpos = xsp;
    if (jj_3R_41()) return true;
    }
    return false;
  }

  private boolean jj_3R_40() {
    if (jj_3R_30()) return true;
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_79() {
    if (jj_3R_73()) return true;
    return false;
  }

  private boolean jj_3R_78() {
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_77() {
    if (jj_3R_18()) return true;
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(34)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3_7() {
    if (jj_scan_token(11)) return true;
    if (jj_scan_token(28)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_77()) jj_scanpos = xsp;
    if (jj_scan_token(27)) return true;
    xsp = jj_scanpos;
    if (jj_3R_78()) jj_scanpos = xsp;
    if (jj_scan_token(27)) return true;
    xsp = jj_scanpos;
    if (jj_3R_79()) jj_scanpos = xsp;
    if (jj_scan_token(29)) return true;
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_54() {
    if (jj_scan_token(25)) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_76() {
    if (jj_scan_token(9)) return true;
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_69() {
    if (jj_scan_token(16)) return true;
    if (jj_3R_56()) return true;
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_46() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_53()) {
    jj_scanpos = xsp;
    if (jj_3R_54()) return true;
    }
    return false;
  }

  private boolean jj_3R_53() {
    if (jj_scan_token(30)) return true;
    if (jj_3R_56()) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_21() {
    if (jj_3R_31()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_32()) {
    jj_scanpos = xsp;
    if (jj_scan_token(34)) return true;
    }
    return false;
  }

  private boolean jj_3_4() {
    if (jj_scan_token(9)) return true;
    if (jj_scan_token(7)) return true;
    if (jj_3R_56()) return true;
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_45() {
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3_11() {
    if (jj_3R_26()) return true;
    return false;
  }

  private boolean jj_3R_75() {
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_68() {
    if (jj_scan_token(7)) return true;
    if (jj_3R_56()) return true;
    if (jj_3R_51()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_4()) { jj_scanpos = xsp; break; }
    }
    xsp = jj_scanpos;
    if (jj_3R_76()) jj_scanpos = xsp;
    return false;
  }

  private boolean jj_3R_31() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_11()) {
    jj_scanpos = xsp;
    if (jj_3R_45()) return true;
    }
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_46()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_67() {
    if (jj_scan_token(24)) return true;
    if (jj_3R_57()) return true;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3_6() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_20()) {
    jj_scanpos = xsp;
    if (jj_3R_21()) return true;
    }
    return false;
  }

  private boolean jj_3R_20() {
    if (jj_3R_30()) return true;
    return false;
  }

  private boolean jj_3R_66() {
    if (jj_scan_token(12)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_75()) jj_scanpos = xsp;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_39() {
    if (jj_scan_token(STRINGLIT)) return true;
    return false;
  }

  private boolean jj_3_5() {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3R_65() {
    if (jj_scan_token(8)) return true;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_38() {
    if (jj_scan_token(CHARLIT)) return true;
    return false;
  }

  private boolean jj_3R_64() {
    if (jj_3R_74()) return true;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_37() {
    if (jj_scan_token(FLOATLIT)) return true;
    return false;
  }

  private boolean jj_3R_36() {
    if (jj_scan_token(INTLIT)) return true;
    return false;
  }

  private boolean jj_3R_63() {
    if (jj_3R_73()) return true;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_35() {
    if (jj_scan_token(21)) return true;
    return false;
  }

  private boolean jj_3R_34() {
    if (jj_scan_token(18)) return true;
    return false;
  }

  private boolean jj_3R_58() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_62()) {
    jj_scanpos = xsp;
    if (jj_3R_63()) {
    jj_scanpos = xsp;
    if (jj_3R_64()) {
    jj_scanpos = xsp;
    if (jj_3R_65()) {
    jj_scanpos = xsp;
    if (jj_3R_66()) {
    jj_scanpos = xsp;
    if (jj_3R_67()) {
    jj_scanpos = xsp;
    if (jj_3R_68()) {
    jj_scanpos = xsp;
    if (jj_3R_69()) {
    jj_scanpos = xsp;
    if (jj_3_7()) return true;
    }
    }
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3R_62() {
    if (jj_3R_19()) return true;
    return false;
  }

  private boolean jj_3R_33() {
    if (jj_scan_token(15)) return true;
    return false;
  }

  private boolean jj_3R_24() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_33()) {
    jj_scanpos = xsp;
    if (jj_3R_34()) {
    jj_scanpos = xsp;
    if (jj_3R_35()) {
    jj_scanpos = xsp;
    if (jj_3R_36()) {
    jj_scanpos = xsp;
    if (jj_3R_37()) {
    jj_scanpos = xsp;
    if (jj_3R_38()) {
    jj_scanpos = xsp;
    if (jj_3R_39()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_10() {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3R_109() {
    if (jj_scan_token(28)) return true;
    if (jj_3R_56()) return true;
    if (jj_scan_token(29)) return true;
    return false;
  }

  private boolean jj_3R_108() {
    if (jj_3R_110()) return true;
    return false;
  }

  private boolean jj_3R_107() {
    if (jj_3R_31()) return true;
    return false;
  }

  private boolean jj_3R_55() {
    if (jj_3R_58()) return true;
    return false;
  }

  private boolean jj_3R_106() {
    if (jj_3R_25()) return true;
    return false;
  }

  private boolean jj_3R_51() {
    if (jj_scan_token(32)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_55()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(33)) return true;
    return false;
  }

  private boolean jj_3R_49() {
    if (jj_scan_token(20)) return true;
    return false;
  }

  private boolean jj_3R_103() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_9()) {
    jj_scanpos = xsp;
    if (jj_3R_106()) {
    jj_scanpos = xsp;
    if (jj_3R_107()) {
    jj_scanpos = xsp;
    if (jj_3R_108()) {
    jj_scanpos = xsp;
    if (jj_3R_109()) return true;
    }
    }
    }
    }
    return false;
  }

  private boolean jj_3_9() {
    if (jj_3R_24()) return true;
    return false;
  }

  private boolean jj_3_3() {
    if (jj_scan_token(26)) return true;
    if (jj_3R_18()) return true;
    if (jj_scan_token(ID)) return true;
    return false;
  }

  private boolean jj_3R_52() {
    if (jj_scan_token(34)) return true;
    if (jj_3R_56()) return true;
    return false;
  }

  private boolean jj_3R_102() {
    if (jj_3R_105()) return true;
    return false;
  }

  private boolean jj_3R_99() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_102()) jj_scanpos = xsp;
    if (jj_3R_103()) return true;
    return false;
  }

  private boolean jj_3R_50() {
    if (jj_3R_18()) return true;
    if (jj_scan_token(ID)) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_3()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_100() {
    if (jj_3R_104()) return true;
    if (jj_3R_99()) return true;
    return false;
  }

  private boolean jj_3R_96() {
    if (jj_3R_99()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_100()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_48() {
    if (jj_3R_18()) return true;
    return false;
  }

  private boolean jj_3R_43() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_48()) {
    jj_scanpos = xsp;
    if (jj_3R_49()) return true;
    }
    if (jj_scan_token(ID)) return true;
    if (jj_scan_token(28)) return true;
    xsp = jj_scanpos;
    if (jj_3R_50()) jj_scanpos = xsp;
    if (jj_scan_token(29)) return true;
    if (jj_3R_51()) return true;
    return false;
  }

  private boolean jj_3R_97() {
    if (jj_3R_101()) return true;
    if (jj_3R_96()) return true;
    return false;
  }

  private boolean jj_3R_93() {
    if (jj_3R_96()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_97()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private boolean jj_3R_44() {
    if (jj_3R_18()) return true;
    if (jj_scan_token(ID)) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3R_52()) jj_scanpos = xsp;
    if (jj_scan_token(27)) return true;
    return false;
  }

  private boolean jj_3R_94() {
    if (jj_3R_98()) return true;
    if (jj_3R_93()) return true;
    return false;
  }

  private boolean jj_3_2() {
    if (jj_scan_token(30)) return true;
    if (jj_scan_token(31)) return true;
    return false;
  }

  private boolean jj_3R_91() {
    if (jj_3R_93()) return true;
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3R_94()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  /** Generated Token Manager. */
  public ParserTokenManager token_source;
  SimpleCharStream jj_input_stream;
  /** Current token. */
  public Token token;
  /** Next token. */
  public Token jj_nt;
  private int jj_ntk;
  private Token jj_scanpos, jj_lastpos;
  private int jj_la;
  private int jj_gen;
  final private int[] jj_la1 = new int[43];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0x11b7dc0,0x4000,0xa2440,0xa2440,0xa2440,0x0,0x1a2440,0xa2440,0x11b7dc0,0x10eca400,0x200,0xa2440,0x10eca400,0x0,0x1011180,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x882400,0x10400000,0x248000,0x0,0x42000000,0x42000000,0x0,0x40000000,0xa2440,0x4000000,0x10eca400,0x0,0x0,0x0,0x0,0x882400,0x0,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x1800000,0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x1800000,0x37902800,0x0,0x0,0x37902800,0x1800000,0x0,0x0,0x1800000,0x200,0x400,0x20000,0x40000,0x80000,0x1f8,0x600000,0x3000,0x1c000,0x102800,0x0,0x36000000,0x0,0x0,0x0,0x1800000,0x1,0x0,0x0,0x37902800,0x1f8,0x600000,0x3000,0x1c000,0x102800,0x1800000,};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new int[] {0x1,0x0,0x1,0x1,0x1,0x0,0x1,0x1,0x1,0x1,0x0,0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0,0x1,0x0,0x0,0x1,0x0,0x1,0x0,0x1,0x0,0x0,0x0,0x0,0x0,0x0,};
   }
  final private JJCalls[] jj_2_rtns = new JJCalls[12];
  private boolean jj_rescan = false;
  private int jj_gc = 0;

  /** Constructor with InputStream. */
  public Parser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Parser(java.io.InputStream stream, String encoding) {
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor. */
  public Parser(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Constructor with generated Token Manager. */
  public Parser(ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  /** Reinitialise. */
  public void ReInit(ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 43; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  static private final class LookaheadSuccess extends java.lang.Error { }
  final private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private boolean jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }


/** Get the next Token. */
  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  private int[] jj_expentry;
  private int jj_kind = -1;
  private int[] jj_lasttokens = new int[100];
  private int jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new int[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      jj_entries_loop: for (java.util.Iterator<?> it = jj_expentries.iterator(); it.hasNext();) {
        int[] oldentry = (int[])(it.next());
        if (oldentry.length == jj_expentry.length) {
          for (int i = 0; i < jj_expentry.length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              continue jj_entries_loop;
            }
          }
          jj_expentries.add(jj_expentry);
          break jj_entries_loop;
        }
      }
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  /** Generate ParseException. */
  public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[67];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 43; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 67; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  final public void enable_tracing() {
  }

  /** Disable tracing. */
  final public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 12; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  static final class JJCalls {
    int gen;
    Token first;
    int arg;
    JJCalls next;
  }

}
